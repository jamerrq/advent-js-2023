import { test, expectTypeOf, expect, describe } from 'vitest'
import { getStaircasePaths } from '../challenges/24'

describe('Challenge #24', () => {
  test('Test #01', () => {
    expectTypeOf(getStaircasePaths).returns.toEqualTypeOf([])
  })

  test('Test #02', () => {
    const received = getStaircasePaths(4, 2)
    const expected = [
      [
        1,
        1,
        1,
        1
      ],
      [
        1,
        1,
        2
      ],
      [
        1,
        2,
        1
      ],
      [
        2,
        1,
        1
      ],
      [
        2,
        2
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test #03', () => {
    const received = getStaircasePaths(0, 0)
    const expected = [
      []
    ]
    expect(received).toEqual(expected)
  })

  test('Test #04', () => {
    const received = getStaircasePaths(1, 1)
    const expected = [
      [
        1
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test #05', () => {
    const received = getStaircasePaths(7, 3)
    const expected = [
      [
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      [
        1,
        1,
        1,
        1,
        1,
        2
      ],
      [
        1,
        1,
        1,
        1,
        2,
        1
      ],
      [
        1,
        1,
        1,
        1,
        3
      ],
      [
        1,
        1,
        1,
        2,
        1,
        1
      ],
      [
        1,
        1,
        1,
        2,
        2
      ],
      [
        1,
        1,
        1,
        3,
        1
      ],
      [
        1,
        1,
        2,
        1,
        1,
        1
      ],
      [
        1,
        1,
        2,
        1,
        2
      ],
      [
        1,
        1,
        2,
        2,
        1
      ],
      [
        1,
        1,
        2,
        3
      ],
      [
        1,
        1,
        3,
        1,
        1
      ],
      [
        1,
        1,
        3,
        2
      ],
      [
        1,
        2,
        1,
        1,
        1,
        1
      ],
      [
        1,
        2,
        1,
        1,
        2
      ],
      [
        1,
        2,
        1,
        2,
        1
      ],
      [
        1,
        2,
        1,
        3
      ],
      [
        1,
        2,
        2,
        1,
        1
      ],
      [
        1,
        2,
        2,
        2
      ],
      [
        1,
        2,
        3,
        1
      ],
      [
        1,
        3,
        1,
        1,
        1
      ],
      [
        1,
        3,
        1,
        2
      ],
      [
        1,
        3,
        2,
        1
      ],
      [
        1,
        3,
        3
      ],
      [
        2,
        1,
        1,
        1,
        1,
        1
      ],
      [
        2,
        1,
        1,
        1,
        2
      ],
      [
        2,
        1,
        1,
        2,
        1
      ],
      [
        2,
        1,
        1,
        3
      ],
      [
        2,
        1,
        2,
        1,
        1
      ],
      [
        2,
        1,
        2,
        2
      ],
      [
        2,
        1,
        3,
        1
      ],
      [
        2,
        2,
        1,
        1,
        1
      ],
      [
        2,
        2,
        1,
        2
      ],
      [
        2,
        2,
        2,
        1
      ],
      [
        2,
        2,
        3
      ],
      [
        2,
        3,
        1,
        1
      ],
      [
        2,
        3,
        2
      ],
      [
        3,
        1,
        1,
        1,
        1
      ],
      [
        3,
        1,
        1,
        2
      ],
      [
        3,
        1,
        2,
        1
      ],
      [
        3,
        1,
        3
      ],
      [
        3,
        2,
        1,
        1
      ],
      [
        3,
        2,
        2
      ],
      [
        3,
        3,
        1
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test #06', () => {
    const received = getStaircasePaths(3, 3)
    const expected = [
      [
        1,
        1,
        1
      ],
      [
        1,
        2
      ],
      [
        2,
        1
      ],
      [
        3
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test #07', () => {
    const received = getStaircasePaths(2, 1)
    const expected = [
      [
        1,
        1
      ]
    ]
    expect(received).toEqual(expected)
  })

  test('Test #08', () => {
    const received = getStaircasePaths(5, 2)
    const expected = [
      [
        1,
        1,
        1,
        1,
        1
      ],
      [
        1,
        1,
        1,
        2
      ],
      [
        1,
        1,
        2,
        1
      ],
      [
        1,
        2,
        1,
        1
      ],
      [
        1,
        2,
        2
      ],
      [
        2,
        1,
        1,
        1
      ],
      [
        2,
        1,
        2
      ],
      [
        2,
        2,
        1
      ]
    ]
    expect(received).toEqual(expected)
  })
})
